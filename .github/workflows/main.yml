name: Build and Deploy to GCP

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
      container_name:
        required: true
        type: string
      namespace:
        required: false
        type: string
        default: "default"
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_ZONE:
        required: true
      GCP_CLUSTER_NAME:
        required: true
      GCP_SA_KEY:
        required: true
      GCP_ARTIFACT_REGISTRY:
        required: true
      GCP_ARTIFACT_REPOSITORY:
        required: true

jobs:
  build-and-push-gcp:
    name: Build and push to GCP
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.3.0
      with:
        images: ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPOSITORY }}/${{ inputs.repository_name }}
        tags: |
          type=sha,enable=true,prefix=${{ inputs.repository_name }}-,suffix=,format=short

    - name: Build image and push Google Cloud
      uses: RafikFarhad/push-to-gcr-github-action@v5-rc1
      with:
        registry: ${{ secrets.GCP_ARTIFACT_REGISTRY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPOSITORY }}
        image_name: ${{ inputs.repository_name }}
        image_tag: ${{ steps.meta.outputs.version }}
        context: ./base-test-api

    - name: Save Image Tag
      run: echo "IMAGE_TAG=${{ steps.meta.outputs.version }}" >> $GITHUB_ENV

    - name: Clone the repo with the deployment.yaml
      uses: actions/checkout@v3
      with:
        repository: 'willamysfernandes/DesafioDevops'  # Repo que contém o deployment.yaml
        path: 'template-repo'  # Diretório temporário onde o repositório será clonado

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Update kube config
      run: gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} --zone ${{ secrets.GCP_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ secrets.GCP_CLUSTER_NAME }}
        location: ${{ secrets.GCP_ZONE }}

    - name: Update deployment.yaml with new image tag
      run: |
        sed -i 's|us-central1-docker.pkg.dev/winter-surf-452116-n1/desafiodevops1/desafio:.*|us-central1-docker.pkg.dev/winter-surf-452116-n1/desafiodevops1/desafio:${{ env.IMAGE_TAG }}|' /base-test-api/K8S/deployment.yaml

    - name: Commit and Push Updated Deployment
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions@github.com"
        git add path/to/your/deployment.yaml
        git commit -m "Update deployment.yaml with new image tag"
        git push
 
    # - name: Deploy to GKE
    #   run: |
    #     kubectl set image deployment/${{ inputs.deployment_name }} \
    #       ${{ inputs.container_name }}=${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPOSITORY }}/${{ inputs.repository_name }}:$IMAGE_TAG \
    #       -n ${{ inputs.namespace }}
